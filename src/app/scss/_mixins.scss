@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}
@mixin box-sizing($val) {
  box-sizing: $val;
  -moz-box-sizing: $val;
  -webkit-box-sizing: $val;
}
@mixin box-shadow($val...) {
  box-shadow: $val;
  -moz-box-shadow: $val;
  -o-box-shadow: $val;
  -webkit-box-shadow: $val;
}
@mixin font($size, $weight:normal, $color: #000000) {
  font-size: $size;
  font-weight: $weight;
  color: $color;
}
@mixin border-radius($val) {
  border-radius: $val;
  -moz-border-radius: $val;
  -webkit-border-radius: $val;
}
@mixin transition($val) {
  transition: $val;
  -moz-transition: $val;
  -o-transition: $val;
  -webkit-transition: $val;
}
@mixin transition-delay($val) {
  transition-delay: $val;
  -moz-transition-delay: $val;
  -o-transition-delay: $val;
  -webkit-transition-delay: $val;
}
@mixin transform($val) {
  transform: $val;
  -moz-transform: $val;
  -o-transform: $val;
  -webkit-transform: $val;
  -ms-transform: $val;
}
@mixin transform-origin($val) {
  transform-origin: $val;
  -moz-transform-origin: $val;
  -o-transform-origin: $val;
  -webkit-transform-origin: $val;
  -ms-transform-origin: $val;
}
@mixin justify($var) {
  justify-content: $var;
  -webkit-justify-content: $var;
}
@mixin align-items($var) {
  align-items: $var;
  -webkit-align-items: $var;
}
@mixin flex-shrink($val) {
  flex-shrink: 0;
  -webkit-flex-shrink: 0;
}
@mixin flex-direction($var) {
  flex-direction: $var;
  -ms-flex-direction: $var;
  -webkit-flex-direction: $var;
}
@mixin fit($val) {
  object-fit: $val;
  -o-object-fit: $val;
}
@mixin animation($val...) {
  animation: $val;
  -webkit-animation: $val;
  -o-animation: $val;
  -moz-animation: $val;
}
@mixin animation-delay($val) {
  animation-delay: $val;
  -moz-animation-delay: $val;
  -o-animation-delay: $val;
  -webkit-animation-delay: $val;
}
@mixin user-select($val) {
  user-select: $val;
  -moz-user-select: $val;
  -webkit-user-select: $val;
  -ms-user-select: $val;
}
@mixin scrollbar($width, $track-bg, $thumb-bg, $thumb-hover-bg, $radius: 0) {
  &::-webkit-scrollbar {
    width: $width;
  }
  &::-webkit-scrollbar-track {
    background: $track-bg;
    @include border-radius($radius);
  }
  &::-webkit-scrollbar-thumb {
    background: $thumb-bg;
    @include border-radius($radius);
  }
  &::-webkit-scrollbar-thumb:hover {
    background: $thumb-hover-bg;
  }
}
@mixin filter($val) {
  filter: $val;
  -ms-filter: $val;
  -webkit-filter: $val;
}

@mixin pos($height,$top,$left) {
  height: $height;
  top: $top;
  left: $left;
}
@mixin upper-section($ratio-w, $ratio-h) {
  &-wrapper {
    background-color: white;
    width: 100%;
    flex-shrink: $ratio-w;
    margin-bottom: $section-space;
    border: 1px solid $secondary;
  }
  &-cont {
    padding-bottom: $ratio-h;
    position: relative;
  }
  &-content {
    @extend %match-parent;
  }
}
@mixin badge($w, $bg) {
  width: $w;
  height: $w;
  @extend %circle;
  @extend %flex-center;
  background-color: $bg;
  @include font(16px, 500, white);
}
@mixin arrow($arrow-w, $deg, $position, $color) {
  padding-#{$position}: $arrow-w / $root2;
  position: relative;
  &:before {
    @extend %pseudo;
    width: 0;
    height: 0;
    border: $arrow-w/2 solid;
    border-color: $color $color transparent transparent;
    top: calc(50% - #{$arrow-w/2*$root2});
    #{$position}: -$arrow-w/2;
    @include transform-origin(center center);
    @include transform(rotate($deg));
  }
}
